/*FOI DELETADA A TABELA LOCAÇAO ANTERIOR PARA CRIAR UMA
 * COM INFORMAÇOES DIFERENTES
 */

--DELETANDO TABELA
DROP TABLE locacao;


--CRIANDO TABELA
CREATE TABLE LOCACAO(
	IDLOCACAO INT PRIMARY KEY,
	DATA TIMESTAMP,
	MIDIA INT,
	DIAS INT,
	ID_FILME INT,
	FOREIGN KEY(ID_FILME)
	REFERENCES FILME(IDFILME)

);


--CRIANDO TABELA COM QUERY
CREATE SEQUENCE SEQ_LOCACAO;


--COMANDO PARA VALOR DA SEQUENCY
NEXTVAL('SEQ_LOCACAO');


--INSERINDO DADOS
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'01/08/2018',23,3,100);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'01/02/2018',56,1,400);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'02/07/2018',23,3,400);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'02/02/2018',43,1,500);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'02/02/2018',23,2,100);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'03/07/2018',76,3,700);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'03/02/2018',45,1,700);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'04/08/2018',89,3,100);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'04/02/2018',23,3,800);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'05/07/2018',23,3,500);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'05/02/2018',38,3,800);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'01/10/2018',56,1,100);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'06/12/2018',23,3,400);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'01/02/2018',56,2,300);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'04/10/2018',76,3,300);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'01/09/2018',32,2,400);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'08/02/2018',89,3,100);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'01/02/2018',23,1,200);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'08/09/2018',45,3,300);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'01/12/2018',89,1,400);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'09/07/2018',23,3,1000);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'01/12/2018',21,3,1000);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'01/02/2018',34,2,100);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'09/08/2018',67,1,1000);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'01/02/2018',76,3,1000);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'01/02/2018',66,3,200);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'09/12/2018',90,1,400);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'03/02/2018',23,3,100);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'01/12/2018',65,5,1000);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'03/08/2018',43,1,1000);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),'01/02/2018',27,31,200);


--CONSULTANDO DADOS
SELECT * FROM LOCACAO;	
SELECT * FROM GENERO;
SELECT * FROM FILME;
SELECT * FROM REL_LOCADORA;


--APAGANDO A TABELA COLUNAR ANTERIOR
drop table rel_locadora;


--CONSULTANDO DADOS
SELECT L.IDLOCACAO, F.NOME AS FILME, G.NOME AS GENERO, L.DATA AS DATA, L.DIAS AS DIAS, L.MIDIA AS MIDIA
FROM GENERO G
INNER JOIN FILME F
ON G.IDGENERO = F.ID_GENERO
INNER JOIN LOCACAO L
ON L.ID_FILME = F.IDFILME;

--CRIANDO UMA TABELA DE UMA QUERY - CREATE TABLE AS SELECT
create table RELATORIO_LOCADORA as 
SELECT L.IDLOCACAO, F.NOME AS FILME, G.NOME AS GENERO, L.DATA AS DATA, L.DIAS AS DIAS, L.MIDIA AS MIDIA
FROM GENERO G
INNER JOIN FILME F
ON G.IDGENERO = F.ID_GENERO
INNER JOIN LOCACAO L
ON L.ID_FILME = F.IDFILME;


--CONSULTANDO DADOS
select * from RELATORIO_LOCADORA;
select * from LOCACAO;


--CONSULTAR DADOS NOVOS
select max(idlocacao) as relatorio, 
(select max(idlocacao) from locacao) as locacao
from RELATORIO_LOCADORA;


--TRAZER OS DADOS QUE ESTAO EM UMA TABELA E NAO EM OUTRA
SELECT L.IDLOCACAO, F.NOME AS FILME, G.NOME AS GENERO, L.DATA AS DATA, L.DIAS AS DIAS, L.MIDIA AS MIDIA
FROM GENERO G
INNER JOIN FILME F
ON G.IDGENERO = F.ID_GENERO
INNER JOIN LOCACAO L
ON L.ID_FILME = F.IDFILME
where idlocacao not in(select idlocacao from relatorio_locadora);


--INSERINDO REGISTROS NOVOS
insert into relatorio_locadora 
SELECT L.IDLOCACAO, F.NOME AS FILME, G.NOME AS GENERO, L.DATA AS DATA, L.DIAS AS DIAS, L.MIDIA AS MIDIA
FROM GENERO G
INNER JOIN FILME F
ON G.IDGENERO = F.ID_GENERO
INNER JOIN LOCACAO L
ON L.ID_FILME = F.IDFILME
where idlocacao not in(select idlocacao from relatorio_locadora);


--DEIXAR O PROCEDIMENTO AUTOMATICO POR MEIO DE UMA TRIGGER
--QUANDO ENTRAR UM REGISTRO NA TABELA DE LOCACAO VAI FAZER SELECT COM JOIN
--E INSERIR NA TABELA LOCADORA GERANDO O RELATORIO.
create or replace function ATUALIZA_REL()
returns trigger as $$
begin 
	
	insert into relatorio_locadora 
	SELECT L.IDLOCACAO, F.NOME AS FILME, G.NOME AS GENERO, L.DATA AS DATA, L.DIAS AS DIAS, L.MIDIA AS MIDIA
	FROM GENERO G
	INNER JOIN FILME F
	ON G.IDGENERO = F.ID_GENERO
	INNER JOIN LOCACAO L
	ON L.ID_FILME = F.IDFILME
	where idlocacao not in(select idlocacao from relatorio_locadora);

	copy RELATORIO_LOCADORA to
	'/tmp/relatorio_locadora.csv'
	delimiter ';'
	csv header; 

	return new;
end;
$$
language PLPGSQL;


--APAGAR TRIGGER, PRECISA INDICAR A TABELA ONDE ESTA
drop trigger tg_relatorio on locacao;


--CRIANDO A TRIGGER
create trigger tg_relatorio
after insert on locacao
for each row
	execute procedure ATUALIZA_REL();


--INSERINDO DADOS
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),NOW(),100,7,300);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),NOW(),500,1,200);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),NOW(),800,6,500);


--CONSULTANDO DADOS
select * from locacao;
select * from relatorio_locadora;


--EXISTE UMA ATUALIZAÇAO QUANDO É INSERIDO DADOS MAS NAO QUANDO SE RETIRA DADOS
--SINCRONIZANDO COM REGISTROS DELETADOS.
create or replace function delete_locacao()
returns trigger as $$
begin 
	delete from relatorio_locadora
	where idlocacao = old.idlocacao;

	copy RELATORIO_LOCADORA to
	'/tmp/relatorio_locadora.csv'
	delimiter ';'
	csv header;
	
	return old;
end;
$$
language PLPGSQL;


--CRIANDO A TRIGGER
create trigger delete_reg
	before delete on locacao
	for each row 
	execute procedure delete_locacao();

--CONSULTANDO DADOS
select * from locacao;
select * from relatorio_locadora;


--DELETANDO DADOS
delete from locacao
where idlocacao = 1;











